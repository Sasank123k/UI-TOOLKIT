// src/components/Button/Button.tsx

import React from 'react';
import styles from './Button.module.css';

const Button: React.FC = () => {
  return (
    <div className={styles.buttonContainer}>
      <button className={styles.primaryButton}>Primary Button</button>
      <button className={styles.secondaryButton}>Secondary Button</button>
    </div>
  );
};

export default Button;



/* src/components/Button/Button.module.css */

.buttonContainer {
  display: flex;
  gap: 1rem;
}

.primaryButton {
  background-color: #d71e28;
  color: #fff;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.primaryButton:hover {
  background-color: #a31520;
}

.secondaryButton {
  background-color: #ffcd41;
  color: #000;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.secondaryButton:hover {
  background-color: #e0b33d;
}



// src/pages/ButtonPage/ButtonPage.tsx

import React, { useState } from 'react';
import Button from '../../components/Button/Button';
import styles from './ButtonPage.module.css';

const ButtonPage: React.FC = () => {
  const [showTsxCode, setShowTsxCode] = useState(true);

  const tsxCode = `
import React from 'react';
import styles from './Button.module.css';

const Button: React.FC = () => {
  return (
    <div className={styles.buttonContainer}>
      <button className={styles.primaryButton}>Primary Button</button>
      <button className={styles.secondaryButton}>Secondary Button</button>
    </div>
  );
};

export default Button;
  `;

  const cssCode = `
/* src/components/Button/Button.module.css */

.buttonContainer {
  display: flex;
  gap: 1rem;
}

.primaryButton {
  background-color: #d71e28;
  color: #fff;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.primaryButton:hover {
  background-color: #a31520;
}

.secondaryButton {
  background-color: #ffcd41;
  color: #000;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.secondaryButton:hover {
  background-color: #e0b33d;
}
  `;

  return (
    <div className={styles.container}>
      <h1>Button Component</h1>
      <Button />
      <div className={styles.codeToggle}>
        <button onClick={() => setShowTsxCode(true)}>TSX Code</button>
        <button onClick={() => setShowTsxCode(false)}>CSS Code</button>
      </div>
      <pre className={styles.codeBlock}>
        {showTsxCode ? tsxCode : cssCode}
      </pre>
    </div>
  );
};

export default ButtonPage;






/* src/pages/ButtonPage/ButtonPage.module.css */

.container {
  padding: 2rem;
}

.codeToggle {
  margin-top: 2rem;
}

.codeToggle button {
  margin-right: 1rem;
  padding: 0.5rem 1rem;
  border: none;
  background-color: #d71e28;
  color: #fff;
  cursor: pointer;
  border-radius: 5px;
  transition: background-color 0.3s;
}

.codeToggle button:hover {
  background-color: #a31520;
}

.codeBlock {
  margin-top: 1rem;
  background-color: #f4f4f4;
  padding: 1rem;
  border-radius: 5px;
  overflow: auto;
}




// src/App.tsx or your routing file

import React from 'react';
import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';
import Navbar from './components/Navbar/Navbar';
import HomePage from './pages/HomePage/HomePage';
import ComponentsPage from './pages/Components/Components';
import ButtonPage from './pages/ButtonPage/ButtonPage';
// Import other component pages

const App: React.FC = () => {
  return (
    <Router>
      <Navbar />
      <Routes>
        <Route path="/" element={<HomePage />} />
        <Route path="/components" element={<ComponentsPage />} />
        <Route path="/button" element={<ButtonPage />} />
        {/* Add routes for other component pages */}
      </Routes>
    </Router>
  );
};

export default App;



// src/pages/Components/Components.tsx

import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import styles from './Components.module.css';

// Other imports...

const Components: React.FC = () => {
  const [searchQuery, setSearchQuery] = useState('');

  const uiElements = [
    { name: 'Button', category: 'Button', count: 8 },
    // Other elements...
  ];

  const filteredComponents = (section: { name: string, category: string, count: number }[]) =>
    section.filter(component =>
      component.name.toLowerCase().includes(searchQuery.toLowerCase())
    );

  return (
    <div className={styles.componentsContainer}>
      <div className={styles.heroSection}>
        <h1>Huge collection of sections</h1>
        <h2>Infinite combinations</h2>
        <p>
          Discover a multitude of customizable options to craft pixel-perfect pages with ease.
        </p>
        <div className={styles.searchBox}>
          <input
            type="text"
            placeholder="Search for multiple components..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
          />
        </div>
      </div>

      <div className={styles.sectionsContainer}>
        {/* Other sections... */}

        <div className={styles.section}>
          <h3 className={styles.sectionHeading}>UI Elements</h3>
          <div className={styles.blocksContainer}>
            {filteredComponents(uiElements).map((element, index) => (
              <Link key={index} to={`/${element.name.toLowerCase().replace(/ /g, '')}`} className={styles.blockLink}>
                <div className={styles.block}>
                  <div className={styles.blockImage}>Image</div>
                  <div className={styles.blockContent}>
                    <p className={styles.blockTitle}>{element.category}</p>
                    <p className={styles.blockCount}>{element.count} components</p>
                  </div>
                </div>
              </Link>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Components;
