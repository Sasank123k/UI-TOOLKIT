/* Button.module.css */

.button {
  padding: 10px 20px;
  border: none;
  cursor: pointer;
  font-size: 16px;
}

.signOn {
  background-color: #0072ce;
  color: white;
}

.learnMore {
  background-color: #00a4e4;
  color: white;
}

.getStarted {
  background-color: #3a6da7;
  color: white;
}

.customizable {
  background-color: #f0f0f0;
  color: black;
}




import React, { useState } from 'react';
import styles from './Button.module.css';

const Button = () => {
  const [showCss, setShowCss] = useState(false);

  const handleCopy = (text: string) => {
    navigator.clipboard.writeText(text);
    alert('Code copied to clipboard');
  };

  const toggleCode = () => {
    setShowCss(!showCss);
  };

  const tsxCode = `
import React from 'react';
import styles from './Button.module.css';

const Button = ({ type, text }) => {
  return (
    <button className={\`\${styles.button} \${styles[type]}\`}>
      {text}
    </button>
  );
};

export default Button;
`;

  const cssCode = `
.button {
  padding: 10px 20px;
  border: none;
  cursor: pointer;
  font-size: 16px;
}

.signOn {
  background-color: #0072ce;
  color: white;
}

.learnMore {
  background-color: #00a4e4;
  color: white;
}

.getStarted {
  background-color: #3a6da7;
  color: white;
}

.customizable {
  background-color: #f0f0f0;
  color: black;
}
`;

  return (
    <div>
      <button onClick={() => handleCopy(tsxCode)}>Copy TSX</button>
      <button onClick={() => handleCopy(cssCode)}>Copy CSS</button>
      <button onClick={toggleCode}>Toggle Code</button>

      {showCss ? (
        <pre>
          <code>{cssCode}</code>
        </pre>
      ) : (
        <pre>
          <code>{tsxCode}</code>
        </pre>
      )}

      <div>
        <ButtonComponent type="signOn" text="SIGN ON" />
        <ButtonComponent type="learnMore" text="LEARN MORE" />
        <ButtonComponent type="getStarted" text="GET STARTED" />
        <ButtonComponent type="customizable" text="CUSTOMIZABLE TEXT" />
      </div>
    </div>
  );
};

const ButtonComponent = ({ type, text }) => {
  return (
    <button className={`${styles.button} ${styles[type]}`}>
      {text}
    </button>
  );
};

export default Button;


